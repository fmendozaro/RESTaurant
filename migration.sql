CREATE DATABASE IF NOT EXISTS restaurant_db;

USE restaurant_db;

DROP TABLE IF EXISTS orders_items;
DROP TABLE IF EXISTS items;
DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS reservations;
DROP TABLE IF EXISTS users;

CREATE TABLE users (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  username VARCHAR(240) NOT NULL UNIQUE ,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(240) NOT NULL UNIQUE ,
  password VARCHAR(255) NOT NULL,
  phone VARCHAR(20),
  PRIMARY KEY (id)
);

CREATE TABLE reservations (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  user_id INT UNSIGNED NOT NULL,
  num_people int NOT NULL,
  date DATE NOT NULL,
  time TIME NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES users(id)
    ON DELETE RESTRICT
);

CREATE TABLE items (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL ,
  price DECIMAL(10,2) NOT NULL ,
  img_url VARCHAR(500),
  PRIMARY KEY (id)
);

CREATE TABLE orders(
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  order_date DATE NOT NULL,
  delivery_time DATETIME NOT NULL,
  subtotal DECIMAL(10,2) NOT NULL,
  tax DECIMAL(10,2) NOT NULL,
  tip DECIMAL(10,2) NOT NULL,
  total DECIMAL(10,2) NOT NULL,
  user_id INT UNSIGNED NOT NULL,
  status INT NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE RESTRICT
);

CREATE TABLE orders_items(
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  order_id INT UNSIGNED NOT NULL,
  item_id INT UNSIGNED NOT NULL,
  quantity INT NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (order_id) REFERENCES orders(id) ON DELETE CASCADE ,
  FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE NO ACTION
);